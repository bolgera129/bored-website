{"version":3,"sources":["Components/Home.module.css","Components/NavBar.module.css","Components/Billy_Ohio.ttf","Components/NavBar.js","Utils/publicUrl.js","Utils/windowDimensions.js","Components/Home.js","Components/Homies.js","Components/Fish.js","Components/Aftermath.js","Components/Destinations.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","bgcolor","bg","assetPath","useState","scroll","setScroll","useEffect","document","addEventListener","scrollCheck","window","scrollY","Navbar","fixed","className","css","navCont","collapseOnSelect","expand","Brand","href","Image","src","startsWith","process","logo","Toggle","aria-controls","toggler","Collapse","id","navbarContainer","Nav","navbarNav","divNavBlack","divNavWhite","Item","navItemBlack","navItemWhite","Link","textWhite","textBlack","getWindowDimensions","width","innerWidth","height","innerHeight","Home","image","windowDimensions","setWindowDimensions","handleResize","removeEventListener","useWindowDimensions","console","log","mainCont","screen","alt","once","overlay","style","left","top","overlayTitle","Homies","Fish","Aftermath","Destinations","App","clicked","setClicked","link","createElement","body","appendChild","click","parentNode","removeChild","require","config","basename","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4936b668.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerImg\":\"Home_headerImg__37r5u\",\"container\":\"Home_container__2z0pk\",\"overlayTitle\":\"Home_overlayTitle__2xRBF\",\"mainCont\":\"Home_mainCont__3j77H\",\"animation\":\"Home_animation__1OtrO\",\"overlay\":\"Home_overlay__1_rbB\",\"screen\":\"Home_screen__OcSv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItemBlack\":\"NavBar_navItemBlack__3eCtS\",\"navItemWhite\":\"NavBar_navItemWhite__2V3cD\",\"logo\":\"NavBar_logo__2b9K_\",\"NavItem\":\"NavBar_NavItem__3Gt1P\",\"textWhite\":\"NavBar_textWhite__2HuEU\",\"textBlack\":\"NavBar_textBlack__1gQ9Q\",\"navbarContainer\":\"NavBar_navbarContainer__2NaRj\",\"navCont\":\"NavBar_navCont__3Q8Ja\",\"navbarNav\":\"NavBar_navbarNav__2vdBq\",\"toggler\":\"NavBar_toggler__3BmsR\",\"navbar-light\":\"NavBar_navbar-light__Rg5CE\",\"navbar-toggler-icon\":\"NavBar_navbar-toggler-icon__1W5Iy\"};","module.exports = __webpack_public_path__ + \"static/media/Billy_Ohio.95aed621.ttf\";","import React,{useEffect,useState} from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav'\nimport Image from 'react-bootstrap/Image'\nimport publicUrl from \"Utils/publicUrl\"\nimport css from \"../Components/NavBar.module.css\"\n\n\nexport default function NavBar(props){\n\n  var bgcolor = false;\n  if (props.bg === \"true\"){\n    bgcolor = false;\n  }\n  else{\n    bgcolor = true;\n  }\n  \n    const [scroll, setScroll] = useState(1)\n\n\n    useEffect(() => {\n      document.addEventListener(\"scroll\", () => {\n        const scrollCheck = window.scrollY < 50\n        if (scrollCheck !== scroll) {\n          setScroll(scrollCheck)\n        }\n      })\n\n    })\n\n    \n    return(\n      <div>\n        <Navbar bg={ (scroll && bgcolor) ? \"transparent\" : \"light\"} fixed = \"top\" className = {css.navCont} collapseOnSelect expand=\"lg\">\n          <Navbar.Brand href=\"/\">   <Image src={publicUrl((scroll && bgcolor) ? \"cowboy.png\" : \"cowboy.png\")} className = {css.logo}/> </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className = { css.toggler }/> \n          <Navbar.Collapse id = \"basic-navbar-nav\" className = {css.navbarContainer}>\n            <Nav className = {css.navbarNav}>\n              <div className = {(scroll && bgcolor) ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link href=\"/homies\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}> Homies </strong></Nav.Link>\n              </Nav.Item>    \n              </div>    \n              <div className = {(scroll && bgcolor) ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link  href=\"/destinations\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}> Destinations </strong></Nav.Link>\n              </Nav.Item>    \n              </div>\n              <div className = {(scroll && bgcolor) ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link  href=\"/aftermath\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}> Aftermath </strong></Nav.Link>\n              </Nav.Item>    \n              </div>\n              <div className = {(scroll && bgcolor) ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link  href=\"/fish\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}> Fish </strong></Nav.Link>\n              </Nav.Item>    \n              </div>\n            </Nav>\n          </Navbar.Collapse>  \n        </Navbar>\n      </div>\n    )\n\n}","export default (assetPath)=>{\n        //return process.env.PUBLIC_URL+assetPath;\n    const publicUrl = assetPath.startsWith('data:image') ? '' : process.env.PUBLIC_URL;\n    return publicUrl + assetPath;\n}","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React from \"react\"\nimport NavBar from \"./NavBar\"\nimport css from \"./Home.module.css\"\nimport useWindowDimensions from \"../Utils/windowDimensions\"\nimport \"./Billy_Ohio.ttf\"\n// import CrossfadeImage from 'react-crossfade-image'\nimport LazyLoad from 'react-lazyload';\nimport {Image} from \"react-bootstrap\"\n\nimport 'antd/dist/antd.css';\n\n\n\nexport default function Home(props){\n\n\n    const { height, width } = useWindowDimensions();\n    console.log(width)\n\n    var image;\n    if (width > 786){\n        image = 'front.jpeg'\n    }\n    else{\n        console.log(true)\n        image = 'front-iphone.jpeg'\n    }\n\n    console.log(image)\n    \n\n    return(\n        <div className = {css.mainCont}>\n            <NavBar bg = \"false\"/>  \n        <div>\n        <img width = {width} height = {height} className = {css.screen} alt = ''/>\n            <LazyLoad height = {height} width = {width} once>\n                <Image src = {image} alt = \"homepage\" height = {height} width = {width}/>\n            </LazyLoad>\n           <div className = {css.overlay} style = {{width: '100%', height: '100%', left:'0px',top: '0px'}}>\n                <div className = {css.overlayTitle}>\n                    Aloha Bitches\n                </div>\n           </div>\n        </div>\n    </div>\n    )\n}","import React from 'react'\nimport NavBar from './NavBar'\n\n\n\nexport default function Homies(){\n\n\n    return(\n        <div>\n            <NavBar bg = \"false\"/>  \n            Homies\n        </div>\n    )\n}","import React from 'react'\nimport NavBar from './NavBar'\n\n\n\nexport default function Fish(){\n\n\n    return(\n        <div>\n            <NavBar bg = \"false\"/>  \n            Fish\n        </div>\n    )\n}","import React from 'react'\nimport NavBar from './NavBar'\n\n\nexport default function Aftermath(){\n\n\n    return(\n        <div>\n            <NavBar bg = \"true\"/>  \n            Aftermath\n        </div>\n    )\n}","import React from 'react'\nimport NavBar from './NavBar'\n\n\n\nexport default function Destinations(){\n\n\n    return(\n        <div>\n            <NavBar bg = \"false\"/>  \n            Destinations\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport Home from \"./Components/Home\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Homies from 'Components/Homies';\nimport Fish from 'Components/Fish';\nimport Aftermath from 'Components/Aftermath';\nimport Destinations from 'Components/Destinations';\n\nfunction App() {\n  const [clicked,setClicked] = useState(false)\n  if (!clicked){\n    const link = document.createElement('div');\n    link.href = '/home';\n    // 3. Append to html page\n    document.body.appendChild(link);\n    // 4. Force download\n    link.click();\n    // 5. Clean up and remove the link\n    link.parentNode.removeChild(link);\n    setClicked(true)\n  }\n\n  require('dotenv').config()\n  return (\n      <Router basename = {process.env.PUBLIC_URL}>\n          <main className = \"marginBot20\">\n\n            {\n              <Switch>\n                <Route path = \"/home\">\n                  <Home />\n                </Route>\n                <Route path = \"/homies\">\n                  <Homies/>\n                </Route>\n                <Route path = \"/destinations\">\n                  <Destinations/>\n                </Route>\n                <Route path = \"/aftermath\">\n                  <Aftermath/>\n                </Route>\n                <Route path = \"/fish\">\n                  <Fish/>\n                </Route>\n                <Route path = \"\"> \n                  <Home/>\n                </Route>\n              </Switch>\n            }        \n          </main>\n      </Router>   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}